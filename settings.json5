{
  /***
     This file contains settings for some browser-configs that were current at the time it was composed.
     Simply refer to the name of a config in ⍺ of the Test-fn
    i.e. Test'./MS3' '' 'Chrome80' - of course that is optional, the "default"-Config will used if you don't explicitely select a config
    or use `Selenium.ApplySettings'Chrome80'` (or: Selenium.InitBrowser'HtmlRenderer') in your own test-function. 
    NB: you may also pass an empty string as ⍵ to use the default. Or use the (not so appropriately named envvar SELENIUM_DRIVER to pass that name)
    ***/

  Browsers: {
    Chromium: {// see https://www.nuget.org/packages/Selenium.WebDriver.ChromeDriver#versions-body-tab for latest versions
      o: 'ChromeDriver', // name of object that will be instiated
      n: 'Selenium.WebDriver.ChromeDriver', // name of Nuget package
      u: ['OpenQA.Selenium.Chrome'],
      ns: 'Chrome', // name of WebDriver (namespaces in OpenQA.Selenium.) we will be ⎕USING
      Options: {
        AddArguments: ['--window-size=1920,1080']
      },
      Flavours: {
        CEFinDyalog: {
          SITEROOT: 'http://dyalog_root',
          // NB:Namespaces are usually something to dig into - Options specifies a parameter within this config. To avoid further processing, is has the flag isDriverParam!
          Options: {
            DebuggerAddress: '127.0.0.1:8080',
            isDriverParam: true
          },
          AddArguments: ['--no-sandbox','--remote-debugging-port=8080'],
          Flavours: {
            HtmlRenderer: {
              // DEPRECATED: this should be version specific - pls. move away from using the "plain" "HtmlRenderer"-config!
            },
            HtmlRenderer200: {
              v:'127.0.6533.7200', 
            },
            HtmlRenderer190: {
              //v: '121.0.6167.18400'
              v:'127.0.6533.7200', // with v19.0. from 2024-08-07  onwards
            },
            HtmlRenderer182: {
              v: '90.0.4430.2400'
            },
            HtmlRenderer182beta: {
              v: '89.0.4389.2300'
            }
          }
        },
        Chrome: {
          // use all details of parent object
        },
        HeadlessChrome: {
          // uses same defaults as LatestChrome and runs in headless mode
          AddArguments: ['--headless window-size=1920,1080']
        }
      }
    },
    Firefox: {
      o: 'FirefoxDriver',
      n: 'Selenium.WebDriver.GeckoDriver',
      u: ['OpenQA.Selenium.Firefox'],
      ns: 'Firefox',
      Options: {
        AddArguments: ['--width=1920', '--height=1080']
      },
    },
    Edge: {
      o: 'EdgeDriver',
      n: 'Selenium.WebDriver.EdgeDriver',
      u:[ 'OpenQA.Selenium.Edge'],
      ns: 'Edge',
      Options: {
        AddArguments: ['--window-size=1920,1080']
      },
    }
  },

  Port: 8080,
  Browser: 'Chrome', 
  WindowSize: [ 1920, 1080 ],
  Components: {
    WebDriver: {
      n: 'Selenium.WebDriver', // name of NuGet package
      v: '4.33.0', // version
      u: ['OpenQA', 'OpenQA.Selenium','OpenQA.Selenium.Keys'], // "things" we are using
    },
    optional: {
      Support: {
        n: 'Selenium.Support',
        v: '4.33.0',
        u: ['OpenQA.Selenium.Support', 'OpenQA.Selenium.Support.UI'],
        f: 'WebDriver.Support'
      },
      Newtonsoft: {
        n: 'Newtonsoft.Json',
        v: '13.0.3'
      },
      WaitHelpers: {
        n: 'SeleniumExtras.WaitHelpers',
        v: '1.0.2'
      },
      ImageSharp: {
        n: 'SixLabors.ImageSharp',
        v: '3.1.10'
      },
      ImageSharpCompare: {
        n: 'Codeuctivity.ImageSharpCompare',
        v: '4.1.342'
      }
    }
  }
}