 InitBrowser settings;browser;files;msg;path;len;options;opt;pth;subF;suffix;drv;opts;p;cap;z;pckgs;Selenium;slnm;av;nm;f1;nugetPackage;nul;sz
 :If 0=⎕NC'DEFAULTBROWSER'
     Init
 :EndIf
 options←''
 :If ×⎕NC'BROWSER' ⍝ close any open browser
     BROWSER.Quit
 :EndIf
     ApplySettings settings
 browser←SETTINGS.Browser.ns
 pckgs←0 3⍴⍬

 :Trap 0 ⍝ Try to find out if Browser is alive - not always reliable
     {}BROWSER.Url
 :Else
         pckgs⍪←SETTINGS.Components.WebDriver.(n v u)
         pckgs[1;2]←⊂⍬  ⍝ no specific version → use latest
      ⍝↑↑↑↑ this makes some assumptions about the namespaces - so we need to use WebDriver!
         :For nm :In SETTINGS.Components.optional.⎕NL ¯9
             p←SETTINGS.Components.optional⍎nm
             :If 0=p.⎕NC'enabled'
             :OrIf p.enabled∊1(⊂'true')
                 pckgs⍪←p.{6::'' ⋄ ⍎⍵}¨'nvu'
             :EndIf
         :EndFor
         av←'-'~⍨⎕C 1⊃'.'⎕WG'aplversion'

          pckgs⍪←SETTINGS.Browser.(n '' u)  ⍝ VALUE ERROR indicates we don't know your browser!
         :If ⎕NEXISTS myNuGetFolder←(739⌶0),'/Selenium'
             :If 20≤1⊃⎕SE.SALTUtils.VERSION
                 myNuGetFolder←(⎕MKDIR⍠'Unique' 1)myNuGetFolder
             :Else
                 :While ⎕NEXISTS myNuGetFolder
                     myNuGetFolder,←⎕A[?26]
                 :EndWhile
                 ⎕MKDIR myNuGetFolder
             :EndIf
         :EndIf
         NuGet.Setup myNuGetFolder
         nul←{NuGet.Add myNuGetFolder((1⊃⍵),(0<≢2⊃⍵)/'/',2⊃⍵)}¨↓pckgs
         ⎕USING←'System,mscorlib.dll' 'System.Drawing,System.Drawing.Primitives' 'System.IO,System.IO.dll'
         ⎕USING,←('(includePrimary: 0)'NuGet.Using myNuGetFolder),(⊃,/pckgs[;3])~⎕NULL
         System.Environment.SetEnvironmentVariable('SE_MANAGER_PATH'(myNuGetFolder,'/published/selenium-manager/windows/selenium-manager.exe'))
     path←(NuGet.BinFolder myNuGetFolder),'/'

     options←InitOptions browser
     :If 9=⎕NC'BROWSEROPTIONS'  ⍝ if var exists
     :AndIf 0<≢BROWSEROPTIONS
         :For opt :In BROWSEROPTIONS.⎕NL-2
             ⍎'options.',(∊opt),'←BROWSEROPTIONS.',,∊opt
         :EndFor
     :EndIf

     :If 2=SETTINGS.Browser.⎕NC'AdditionalCapabilities'
     :AndIf 0 ⍝ not yet ripe for production!
         :For cap :In SETTINGS.Browser.AdditionalCapabilities
             options.AddAdditionalCapability(cap.name)(cap.value)
         :EndFor
     :EndIf
     :If 2=SETTINGS.Browser.⎕NC'AddArguments'
         :For opt :In SETTINGS.Browser.AddArguments
             options.AddArgument⊂opt
         :EndFor
     :EndIf
     :If 2=SETTINGS.Browser.⎕NC'LoggingPreferences'
         cap←options.ToCapabilities

         :For p :In SETTINGS.Browser.LoggingPreferences
             options.SetLoggingPreference p.type(⍎p.level)
         :EndFor
     :EndIf

     :Trap 90
         :If options≡''
             BROWSER←⎕NEW(⍎SETTINGS.Browser.o)
         :Else
             BROWSER←⎕NEW(⍎SETTINGS.Browser.o)(options)
         :EndIf
     :Else
         ⎕←(⎕JSON⍠'Compact' 0)⎕DMX
         ⎕←⍕⎕EXCEPTION
         ∘∘∘
     :EndTrap

     CURRENTBROWSER←browser
     ACTIONS←⎕NEW Selenium.Interactions.Actions BROWSER

     :If ~0{6::⍺ ⋄ ⍎⍵}'QUIETMODE' ⋄ ⎕←'Starting ',browser ⋄ :EndIf

 :End
 sz←⍬
 :If 2=SETTINGS.⎕NC'WindowSize'
     sz←SETTINGS.WindowSize
 :EndIf
 :If ×#.⎕NC'MAX'
     :Trap 90           ⍝ can't do that with CEF
         BROWSER.Manage.Window.Maximize
     :EndTrap
 :ElseIf sz≢⍬
     :Trap 90   ⍝ does not work with CEF
         BROWSER.Manage.Window.Size←⎕NEW Size sz
     :EndTrap
 :EndIf
