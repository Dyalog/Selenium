 ok←{Re}InitBrowser settings;browser;files;msg;path;len;options;opt;pth;subF;suffix;drv;opts;p;cap;z;pckgs;Selenium;slnm;av;nm;f1;nugetPackage;nul;sz;noBrowserVersion
 ⍝ if ⍺=1, re-initialize browser (might be neccessary to easily reconnect to HtmlRenderer, when the previous instance was closed by the application...)
 ⍝
 ⍝ ⍵ is (name of browser)[port]
 ⍝   or alternatively the name of json[5] file with browser settings (will be merged with our own browsers.json5 toget complete settings)
 ⍝   or a namespace with the same content
 ⍝ ok=0 '' if it worked,
 ⍝    1 errmsg otherwise
 :If ⊃ok←Init
     →0
 :EndIf
 Re←{6::0 ⋄ ⍎⍵}'Re'
 options←''
 :If ×⎕NC'BROWSER' ⍝ close any open browser
     BROWSER.Quit
 :EndIf
 :If 0 2∊⍨10|⎕DR settings   ⍝ if settings is a string
 :AndIf ⎕NEXISTS settings
     settings←(⎕JSON⍠'Dialect' 'JSON5')1⊃⎕NGET settings
 :EndIf
 :If 0=≢settings            ⍝ it it is empty
 :AndIf 0<≢f1←2 ⎕NQ'.' 'GetEnvironment' ' SELENIUM_CONFIGFILE'    ⍝ and a configfile is given in the environment
     settings←(⎕JSON⍠'Dialect' 'JSON5')1⊃⎕NGET f1
 :EndIf
 :If ~Re
     ApplySettings settings
 :EndIf
 browser←SETTINGS.Browser.wdns
 pckgs←0 3⍴⍬

 :Trap 0 ⍝ Try to find out if Browser is alive - not always reliable
     {}BROWSER.Url
 :Else
     noBrowserVersion←0=SETTINGS.Browser.⎕NC'version'
     :If ~Re
         pckgs⍪←SETTINGS.components.webdriver.(nuget version using)
         :For nm :In SETTINGS.components.optional.⎕NL ¯9
             p←SETTINGS.components.optional⍎nm
             :If 0=p.⎕NC'enabled'
             :OrIf p.enabled∊1(⊂'true')
                 pckgs⍪←p.{6::'' ⋄ ⍎⍵}¨'nuget' 'version' 'using'
             :EndIf
         :EndFor
         av←'-'~⍨⎕C 1⊃'.'⎕WG'aplversion'

         pckgs⍪←SETTINGS.Browser.(nuget({0::'' ⋄ ⍎⍵}'version')using)
         :If ⎕NEXISTS myNuGetFolder←(739⌶0),'/Selenium'    ⍝ myNuGetFolder is global (well, in the Selenium namespace), will be erase by "End"
             :If 20≤1⊃⎕SE.SALTUtils.VERSION
                 myNuGetFolder←(⎕MKDIR⍠'Unique' 1)myNuGetFolder
             :Else
                 :While ⎕NEXISTS myNuGetFolder
                     myNuGetFolder,←⎕A[?26]
                 :EndWhile
                 ⎕MKDIR myNuGetFolder
             :EndIf
         :EndIf
         {}NuGet.Setup myNuGetFolder
         nul←{NuGet.Add myNuGetFolder((1⊃⍵),(0<≢2⊃⍵)/'/',2⊃⍵)}¨↓pckgs
         ⎕USING←'System,mscorlib.dll' 'System.Drawing,System.Drawing.Primitives' 'System.IO,System.IO.dll'
         ⎕USING,←('(includePrimary: 0)'NuGet.Using myNuGetFolder),(⊃,/pckgs[;3])~⎕NULL
     :EndIf
     path←(NuGet.BinFolder myNuGetFolder),'/'
     :If noBrowserVersion
         :If ~Re
             System.Environment.SetEnvironmentVariable('SE_MANAGER_PATH'(myNuGetFolder,'/published/selenium-manager/windows/selenium-manager.exe'))
         :EndIf
         BSVC←⍬
     :Else
         BSVC←(⍎SETTINGS.Browser.driver,'Service').CreateDefaultService⊂(path)
         BSVC.Start
         :Trap 90
             z←1⊣BSVC.IsRunning
         :Else
             ok←1('BrowserService "',(⍎SETTINGS.Browser.driver,'Service'),'" has been started, but it not running!"')
             →0
         :EndTrap
     :EndIf

     options←InitOptions browser
     :If 9=⎕NC'BROWSEROPTIONS'  ⍝ if var exists
     :AndIf 0<≢BROWSEROPTIONS
         :For opt :In BROWSEROPTIONS.⎕NL-2
             ⍎'options.',(∊opt),'←BROWSEROPTIONS.',,∊opt
         :EndFor
     :EndIf

     :If 2=SETTINGS.Browser.⎕NC'AdditionalCapabilities'
     :AndIf 0 ⍝ not yet ripe for production!
         :For cap :In SETTINGS.Browser.AdditionalCapabilities
             options.AddAdditionalCapability(cap.name)(cap.value)
         :EndFor
     :EndIf
     :If 2=SETTINGS.Browser.⎕NC'AddArguments'
         ⎕←SETTINGS.Browser.AddArguments
         :For opt :In SETTINGS.Browser.AddArguments
             options.AddArgument⊂opt
         :EndFor
     :EndIf
     :If 2=SETTINGS.Browser.⎕NC'LoggingPreferences'
         cap←options.ToCapabilities

         :For p :In SETTINGS.Browser.LoggingPreferences
             options.SetLoggingPreference p.type(⍎p.level)
         :EndFor
     :EndIf

     :Trap 90
         :If BSVC≡⍬
             :If options≡''
                 BROWSER←⎕NEW(⍎SETTINGS.Browser.driver)
             :Else
                 BROWSER←⎕NEW(⍎SETTINGS.Browser.driver)(options)
             :EndIf
         :Else
             :If options≡''
                 BROWSER←⎕NEW(⍎SETTINGS.Browser.driver)BSVC
             :Else
                 BROWSER←⎕NEW(⍎SETTINGS.Browser.driver)(BSVC options)
             :EndIf
         :EndIf
     :Else
         ok←1 ''
         ok[2]←⊂(⎕JSON⍠'Compact' 0)⎕DMX
         ok[2]←⊂(2⊃ok),⍕⎕EXCEPTION
         →0
     :EndTrap

     CURRENTBROWSER←browser
     ACTIONS←⎕NEW Selenium.Interactions.Actions BROWSER

     :If ~0{6::⍺ ⋄ ⍎⍵}'QUIETMODE' ⋄ ⎕←'Starting ',browser ⋄ :EndIf

 :End
 sz←⍬
 :If 2=SETTINGS.⎕NC'WindowSize'
     sz←SETTINGS.WindowSize
 :EndIf
 :If ×#.⎕NC'MAX'
     :Trap 90           ⍝ can't do that with CEF
         BROWSER.Manage.Window.Maximize
     :EndTrap
 :ElseIf sz≢⍬
     :Trap 90   ⍝ does not work with CEF
         BROWSER.Manage.Window.Size←⎕NEW Size sz
     :EndTrap
 :EndIf
